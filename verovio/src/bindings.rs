/* automatically generated by rust-bindgen 0.58.1 */

pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const __bool_true_false_are_defined: u32 = 1;
pub type Toolkit = u8;
extern "C" {
    #[doc = " Methods exported a functions to use the Toolkit class"]
    pub fn vrvToolkit_constructor() -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn vrvToolkit_constructorResourcePath(
        resourcePath: *const ::std::os::raw::c_char,
    ) -> *mut Toolkit;
}
extern "C" {
    pub fn vrvToolkit_destructor(tk: *mut Toolkit);
}
extern "C" {
    pub fn vrvToolkit_edit(tk: *mut Toolkit, editorAction: *const ::std::os::raw::c_char) -> bool;
}
extern "C" {
    pub fn vrvToolkit_getAvailableOptions(tk: *mut Toolkit) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getElementAttr(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getElementsAtTime(
        tk: *mut Toolkit,
        millisec: ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getExpansionIdsForElement(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getHumdrum(tk: *mut Toolkit) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getLog(tk: *mut Toolkit) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getMEI(
        tk: *mut Toolkit,
        options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getMIDIValuesForElement(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getNotatedIdForElement(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getOptions(
        tk: *mut Toolkit,
        default_values: bool,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getPageCount(tk: *mut Toolkit) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vrvToolkit_getPageWithElement(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vrvToolkit_getTimeForElement(
        tk: *mut Toolkit,
        xmlId: *const ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn vrvToolkit_getVersion(tk: *mut Toolkit) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_loadData(tk: *mut Toolkit, data: *const ::std::os::raw::c_char) -> bool;
}
extern "C" {
    pub fn vrvToolkit_loadZipDataBase64(
        tk: *mut Toolkit,
        data: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_loadZipDataBuffer(
        tk: *mut Toolkit,
        data: *const ::std::os::raw::c_uchar,
        length: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_renderToMIDI(
        tk: *mut Toolkit,
        c_options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToSVG(
        tk: *mut Toolkit,
        page_no: ::std::os::raw::c_int,
        c_options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToTimemap(tk: *mut Toolkit) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_redoLayout(tk: *mut Toolkit);
}
extern "C" {
    pub fn vrvToolkit_redoPagePitchPosLayout(tk: *mut Toolkit);
}
extern "C" {
    pub fn vrvToolkit_renderData(
        tk: *mut Toolkit,
        data: *const ::std::os::raw::c_char,
        options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_setOptions(tk: *mut Toolkit, options: *const ::std::os::raw::c_char);
}
